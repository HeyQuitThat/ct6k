TODO, in approximate order:
BUGS:

ANNOYANCES:
- Close button on title bar does not close all windows (File/Exit does)

FEATURES:
(Easy)
- Man pages

(Medium)
- write a REAL user guide for the GUI
- rearrange source tree with a single Makefile at the top level
- move resources and scripts to separate directory.

(Hard but not too hard)
- BRK instruction for debug support
- Breakpoint in emulator
- add assembler support for reg aliases (IP, SP, FLG)
- Mac OSX support (works but widget spacing is weird)
- Write a programming guide, not just an instruction reference

(Hard)
- boot loader firmware
- assembler option to dump symbol table
- loader for multi-segment
- file I/O in separate thread

Later:
- serial I/O for terminal
- WAIT opcode for interrupt-driven I/O
- Interrupt support
  - Timer interrupt?
- random access storage?
- self-hosted assembler
- COBOL-ish compiler or BASIC-ish interpreter


Pie in the sky:
- live assembler (for qt version)
- multiple breakpoints for emulator (performance?)
- break on register value / change for emulator
- page table support
- kernel/user mode
- some sort of OS

CONSTANT/FOREVER
- visual improvements for gui (this is more of a continuous task)
